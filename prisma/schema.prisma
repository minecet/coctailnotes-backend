// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

// note: keep "generator" and "datasource" as they are
// ...

model Book {
  id        String   @id @default(cuid())
  title     String
  year      Int
  summary   String?
  quantity  Int      @default(0)
  genre     String[]
  // authorName    String //  <== DELETE THIS LINE
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId String //  <== ADD
  author   Author @relation(fields: [authorId], references: [id]) //  <== ADD
}

model Author {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  bio       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]
}

model Note {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  cocktailId Int
  cocktail   Cocktail @relation(fields: [cocktailId], references: [id])
}

model Cocktail {
  id            Int    @id @default(autoincrement())
  title         String
  difficulty    String
  portion       String
  time          String
  description   String
  ingredients1  String
  ingredients2  String
  ingredients3  String
  ingredients4  String
  ingredients5  String
  ingredients6  String
  ingredients7  String
  ingredients8  String
  ingredients9  String
  ingredients10 String
  ingredients11 String
  ingredients12 String
  image         String
  Step1         String
  Step2         String
  Step3         String
  Step4         String
  Step5         String
  Step6         String
  notes         Note[]
}

model User {
  id             String   @id @default(uuid())
  username       String   @unique
  passwordHash   String
  email          String   @unique
  firstName      String
  surname        String
  bioDescription String?
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  notes          Note[]
}
